{"version":3,"sources":["webpack:///./src/app/transaction/output/output.module.ts","webpack:///./src/app/transaction/output/output.page.html","webpack:///./src/app/transaction/output/output.page.scss","webpack:///./src/app/transaction/output/output.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAA+C;AACN;AACI;AACE;AACF;AACa;AACf;AAiB3C;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAf5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,uDAAU;qBACtB;iBACF,CAAC;gBACF,kEAAY;aACb;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACvB7B,we;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACU;AACH;AACI;AACS;AAQrE;IAGE,oBACS,MAAqB,EACpB,KAAqB,EACrB,UAAsB;QAFvB,WAAM,GAAN,MAAM,CAAe;QACpB,UAAK,GAAL,KAAK,CAAgB;QACrB,eAAU,GAAV,UAAU,CAAY;IAC7B,CAAC;IAEJ,6BAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,KAAK,GAAG,0DAAa,CACxB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CACtB,gEAAS,CAAC,gBAAM,IAAI,sDAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAA9C,CAA8C,CAAC,EACnE,6DAAM,CACJ,UAAC,EAAc;gBAAb,YAAI,EAAE,cAAM;YAAM,WAAI,KAAK,IAAI,IAAI,MAAM,KAAK,IAAI;QAAhC,CAAgC,CACrD,CACF,CACF,CAAC,IAAI,CACJ,gEAAS,CAAC,UAAC,EAAsB;gBAArB,aAAK,EAAE,UAAa,EAAZ,YAAI,EAAE,aAAK;YAC7B,YAAI,CAAC,UAAU;iBACZ,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC;iBACnC,IAAI,CAAC,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC,CAAC;QAF/C,CAE+C,CAChD,CACF,CAAC;IACJ,CAAC;IAzBU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,wGAA+B;;SAEhC,CAAC;+EAKiB,6EAAa;YACb,8DAAc;YACT,oEAAU;OANrB,UAAU,CA0BtB;IAAD,iBAAC;CAAA;AA1BsB","file":"transaction-output-output-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../shared/shared.module';\nimport { OutputPage } from './output.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: OutputPage\n      }\n    ]),\n    SharedModule\n  ],\n  declarations: [OutputPage]\n})\nexport class OutputPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Output</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <app-output\\n    *ngIf=\\\"(coin$ | async) as coin\\\"\\n    [coin]=\\\"coin\\\"\\n    [summary]=\\\"false\\\"\\n    [displayValueCode]=\\\"config.displayValueCode$ | async\\\"\\n  ></app-output>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9uL291dHB1dC9vdXRwdXQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatest, from, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { ApiService } from '../../services/api/api.service';\nimport { ConfigService } from '../../services/config/config.service';\nimport { CoinJSON } from '../../types/bitcore-node';\n\n@Component({\n  selector: 'app-output-page',\n  templateUrl: 'output.page.html',\n  styleUrls: ['output.page.scss']\n})\nexport class OutputPage implements OnInit {\n  coin$: Observable<CoinJSON>;\n\n  constructor(\n    public config: ConfigService,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.coin$ = combineLatest(\n      this.config.currentChain$,\n      this.route.paramMap.pipe(\n        switchMap(params => of([params.get('hash'), params.get('output')])),\n        filter<[string, string]>(\n          ([hash, output]) => hash !== null && output !== null\n        )\n      )\n    ).pipe(\n      switchMap(([chain, [hash, index]]) =>\n        this.apiService\n          .streamTransactionCoins(chain, hash)\n          .pipe(map(listing => listing.outputs[index]))\n      )\n    );\n  }\n}\n"],"sourceRoot":""}