{"version":3,"sources":["webpack:///./src/app/block/block-transactions/block-transactions.module.ts","webpack:///./src/app/block/block-transactions/block-transactions.page.html","webpack:///./src/app/block/block-transactions/block-transactions.page.scss","webpack:///./src/app/block/block-transactions/block-transactions.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAA+C;AACN;AACI;AACE;AACF;AACa;AACQ;AAiBlE;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QAfvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,8EAAqB;qBACjC;iBACF,CAAC;gBACF,kEAAY;aACb;YACD,YAAY,EAAE,CAAC,8EAAqB,CAAC;SACtC,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;ACvBxC,22B;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;ACAb;AAED;AACoB;AACV;AACC;AACS;AAYrE;IAoBE,+BACS,MAAqB,EACpB,KAAqB,EACrB,UAAsB;QAHhC,iBAII;QAHK,WAAM,GAAN,MAAM,CAAe;QACpB,UAAK,GAAL,KAAK,CAAgB;QACrB,eAAU,GAAV,UAAU,CAAY;QAtBxB,YAAO,GAKX,IAAI,4CAAO,EAAE,CAAC;QAClB,WAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAErC,SAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;aACrB,IAAI,CACH,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,eAAK,IAAI,YAAK,CAAC,MAAM,CAAC,EAAb,CAAa,CAAC,CAC5B;aACA,SAAS,EAAqB,CAAC;QAElC,WAAM,GAAG,0DAAa,CAAC,iDAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CACrE,gEAAS,CAAC,UAAC,EAAa;gBAAZ,YAAI,EAAE,aAAK;YAAM,YAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC;QAAxC,CAAwC,CAAC,CACvE,CAAC;IAMC,CAAC;IACJ,wCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAI;YACjB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,EAAE;gBACT,SAAS,mBAAqB;gBAC9B,MAAM,EAAE,MAAM;aACf,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAlCU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,sIAA2C;;SAE5C,CAAC;+EAsBiB,6EAAa;YACb,8DAAc;YACT,oEAAU;OAvBrB,qBAAqB,CAmCjC;IAAD,4BAAC;CAAA;AAnCiC","file":"block-block-transactions-block-transactions-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../shared/shared.module';\nimport { BlockTransactionsPage } from './block-transactions.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: BlockTransactionsPage\n      }\n    ]),\n    SharedModule\n  ],\n  declarations: [BlockTransactionsPage]\n})\nexport class BlockTransactionsPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Transactions</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div>\\n    TODO: summary card â€“ X Transactions in Block #123456, mined time, other\\n    details? This section should blend into the page, rather than being a\\n    clickable-card. (Here's a placeholder:)\\n    <app-block\\n      *ngIf=\\\"(block$ | async) as block\\\"\\n      [block]=\\\"block\\\"\\n      [displayValueCode]=\\\"config.displayValueCode$ | async\\\"\\n    ></app-block>\\n  </div>\\n  <app-transaction-list\\n    [chain$]=\\\"config.currentChain$\\\"\\n    [query$]=\\\"query$\\\"\\n    [displayValueCode]=\\\"config.displayValueCode$ | async\\\"\\n  ></app-transaction-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2NrL2Jsb2NrLXRyYW5zYWN0aW9ucy9ibG9jay10cmFuc2FjdGlvbnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { toObservable } from '@angular/forms/src/validators';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, combineLatest, from, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { ApiService } from '../../services/api/api.service';\nimport { ConfigService } from '../../services/config/config.service';\nimport {\n  Direction,\n  StreamingFindOptions,\n  TransactionJSON\n} from '../../types/bitcore-node';\n\n@Component({\n  selector: 'app-block-transactions-page',\n  templateUrl: 'block-transactions.page.html',\n  styleUrls: ['block-transactions.page.scss']\n})\nexport class BlockTransactionsPage implements OnInit {\n  private _query$: Subject<\n    StreamingFindOptions<TransactionJSON> & {\n      blockHeight?: number;\n      blockHash?: string;\n    }\n  > = new Subject();\n  query$ = this._query$.asObservable();\n\n  hash = this.route.params\n    .pipe(\n      take(1),\n      map(param => param['hash'])\n    )\n    .toPromise() as Promise<string>;\n\n  block$ = combineLatest(from(this.hash), this.config.currentChain$).pipe(\n    switchMap(([hash, chain]) => this.apiService.streamBlock(chain, hash))\n  );\n\n  constructor(\n    public config: ConfigService,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n  ngOnInit() {\n    this.hash.then(hash => {\n      this._query$.next({\n        blockHash: hash,\n        limit: 20,\n        direction: Direction.ascending,\n        paging: 'txid'\n      });\n    });\n  }\n}\n"],"sourceRoot":""}